spring.application.name=TRANSACTION-SERVICE
server.port=8085
account.service.url=http://localhost:8081
app.jwt.secret=config micro
tx.internal.token=config micro
logging.level.feign.Logger=DEBUG
feign.client.config.default.loggerLevel=FULL
spring.datasource.url=config micro
spring.datasource.username=config micro
spring.datasource.password=config micro
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
# JPA (prefer Flyway for DDL; keep update only during early dev)
#spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# Resource server (Keycloak)
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.registry-fetch-interval-seconds=7
# Flyway (runs V1__init_profiles.sql)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
# Actuator
# Expose Prometheus endpoint
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=ALWAYS
#mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=config micro
spring.mail.password=config micro
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
app.jwt-secret=config micro
app.jwt-expiration=86400000
spring.cloud.loadbalancer.retry.enabled=true
spring.cloud.loadbalancer.retry.maxRetriesOnSameServiceInstance=0
spring.cloud.loadbalancer.retry.maxRetriesOnNextServiceInstance=3
# Optional: if you want the metrics endpoint on the same port (default)
# management.server.port=<omit to use app port>
# Add a global tag so you can filter by service in Grafana
management.metrics.tags.application=${spring.application.name}
# (optional but nice) show liveness/readiness
management.endpoint.health.probes.enabled=true
# Better histograms for latency panels
management.metrics.distribution.percentiles-histogram[http.server.requests]=true
management.metrics.distribution.slo[http.server.requests]=50ms,100ms,250ms,500ms,1s,2s,5s