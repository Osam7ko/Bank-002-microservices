spring.application.name=AUTH-SERVICE
server.port=8099
spring.datasource.url=config micro
spring.datasource.username=config micro
spring.datasource.password=config micro
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

app.jwt.secret=config micro
app.jwt.access-minutes: 30
app.jwt.refresh-days: 30
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.registry-fetch-interval-seconds=5

# Expose Prometheus endpoint
management.endpoints.web.exposure.include=health,info,prometheus

# Optional: if you want the metrics endpoint on the same port (default)
# management.server.port=<omit to use app port>

# Add a global tag so you can filter by service in Grafana
management.metrics.tags.application=${spring.application.name}

# (optional but nice) show liveness/readiness
management.endpoint.health.probes.enabled=true

# Better histograms for latency panels
management.metrics.distribution.percentiles-histogram[http.server.requests]=true
management.metrics.distribution.slo[http.server.requests]=50ms,100ms,250ms,500ms,1s,2s,5s